# Remove version field - it's obsolete in modern Docker Compose
services:
  fastapi:
    build: 
      context: ./backend
      target: production
    container_name: fastapi_app
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://pm_user:pm_password@pm_postgres_db:5432/pm_database
      - SECRET_KEY=your-secret-key-here
    depends_on:
      pm_postgres_db:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads:rw
    ports:
      - "8000:8000"
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  pm_postgres_db:
    image: postgres:16-alpine
    container_name: pm_postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: pm_database
      POSTGRES_USER: pm_user
      POSTGRES_PASSWORD: pm_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "15432:5432"
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pm_user -d pm_database"]
      interval: 10s
      timeout: 5s
      retries: 5
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/run/postgresql:noexec,nosuid,size=100m

  frontend:
    build: 
      context: ./frontend
      target: runner
    container_name: nextjs_frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=http://localhost
      - NEXTAUTH_SECRET=your-nextauth-secret-key-change-in-production
      - BACKEND_URL=http://fastapi:8000
      - NEXT_PUBLIC_BACKEND_URL=http://localhost/api/v1
    ports:
       - "3000:3000"
    depends_on:
      - fastapi
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  nginx:
    build: ./nginx
    container_name: pm_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      fastapi:
        condition: service_healthy
      frontend:
        condition: service_healthy
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    read_only: true
    tmpfs:
      - /var/cache/nginx:noexec,nosuid,size=100m
      - /var/run:noexec,nosuid,size=100m

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
