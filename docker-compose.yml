services:
  redis:
    image: redis:7-alpine
    container_name: pm_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  fastapi:
    build:
      context: ./backend
      target: development
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://pm_user:QlILLYN4kmmkuDzNwGrEsBQ4M@pm_postgres_db:5432/pm_database
      - SECRET_KEY=your-secret-key-here
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DEBUG=True
      - WORKERS=1
    depends_on:
      - pm_postgres_db  # Simplified dependency
      - redis
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    ports:
      - "8000:8000"  # Added for direct access

  pm_postgres_db:
    image: postgres:15
    container_name: pm_postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: pm_database
      POSTGRES_USER: pm_user
      POSTGRES_PASSWORD: QlILLYN4kmmkuDzNwGrEsBQ4M
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "15432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pm_user -d pm_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    container_name: pm_adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    depends_on:
      - pm_postgres_db

  frontend:
    build:
      context: ./frontend
      target: development
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXTAUTH_URL=http://localhost
      - NEXTAUTH_SECRET=your-nextauth-secret-key-change-in-production
      - BACKEND_URL=http://fastapi:8000
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8000/api/v1
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"  # Added for direct access
    depends_on:
      - fastapi  # Simplified dependency

  nginx:
    build: ./nginx
    container_name: pm_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - fastapi   # Simplified dependency
      - frontend
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro

volumes:
  postgres_data: